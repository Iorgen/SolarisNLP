version: '3.5'

services:
  nginx:
    image: nginx:1.17-alpine
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/home/backend/web/static
      - media_volume:/home/backend/web/media
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/nginx.conf
      - ./security/certbot/conf:/etc/letsencrypt
      - ./security/certbot/www:/var/www/certbot
    depends_on:
      - face-recognizer
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./security/certbot/conf:/etc/letsencrypt
      - ./security/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  recognizer_db:
    container_name: face_recognizer_db
    hostname: recognizer_db
    image: postgres:12.0-alpine
    env_file:
      - environ/.env.db
    ports:
      - 54329:5432
    networks:
      - recognizer-internal
    restart: on-failure
    volumes:
      - ./postgres_data/data:/var/lib/postgresql/data/

  face-recognizer:
    build:
      context: ./src
      dockerfile: Dockerfile
    expose:
      - "8101"
    depends_on:
      - recognizer_db
    restart: on-failure
#    command: gunicorn web_backend.wsgi:application --timeout 500 --bind 0.0.0.0:8000
    container_name: face_recognizer_app
    image: merlinface.dev/face_recognizer_app
    hostname: recognizer

    volumes:
      - ./recog_data:/usr/src/face_recog_api/recog_data
    networks:
      - recognizer-internal
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

networks:
  recognizer-internal:

volumes:
  static_volume:
  media_volume:
